generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model application {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_id        String?     @db.Uuid
  freelancer_id String?     @db.Uuid
  date_applied  DateTime    @db.Date
  cover_letter  String      @db.VarChar(255)
  status        String      @db.VarChar(255)
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  freelancer    freelancer? @relation(fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job           job?        @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model booking {
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  job_id        String?     @db.Uuid
  freelancer_id String?     @db.Uuid
  start_date    DateTime    @db.Date
  end_date      DateTime    @db.Date
  status        String      @db.VarChar(255)
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  freelancer    freelancer? @relation(fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job           job?        @relation(fields: [job_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job         job[]
}

model freelancer {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id      String?       @db.Uuid
  skills       String        @db.VarChar(255)
  experience   String        @db.VarChar(255)
  availability DateTime      @db.Date
  rate         Int
  status       String        @db.VarChar(255)
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  updated_at   DateTime      @default(now()) @db.Timestamp(6)
  application  application[]
  booking      booking[]
  user         user?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model job {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String        @db.VarChar(255)
  description  String        @db.VarChar(255)
  company_id   String?       @db.Uuid
  requirements String        @db.VarChar(255)
  deadline     DateTime      @db.Date
  status       String        @db.VarChar(255)
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  updated_at   DateTime      @default(now()) @db.Timestamp(6)
  application  application[]
  booking      booking[]
  company      company?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  company     company[]
  freelancer  freelancer[]
}
